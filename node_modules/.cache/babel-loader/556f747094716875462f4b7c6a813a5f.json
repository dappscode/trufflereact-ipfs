{"ast":null,"code":"import _toConsumableArray from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/eth/ipfs/src/App.js\";\n\nvar React = require('react');\n\nimport Web3 from 'web3';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      added_file_hash: null\n    };\n    _this.ipfs = ipfsClient({\n      host: 'ipfs.infura.io',\n      port: 5001,\n      protocol: 'https'\n    });\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveToIpfs = _this.saveToIpfs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"captureFile\",\n    value: function captureFile(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.saveToIpfs(event.target.files);\n    }\n  }, {\n    key: \"saveToIpfs\",\n    value: function saveToIpfs(files) {\n      var _this2 = this;\n\n      var ipfsId;\n      this.ipfs.add(_toConsumableArray(files), {\n        progress: function progress(prog) {\n          return console.log(\"received: \".concat(prog));\n        }\n      }).then(function (response) {\n        console.log(response);\n        ipfsId = response[0].hash;\n        console.log(ipfsId);\n\n        _this2.setState({\n          added_file_hash: ipfsId\n        });\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"creablock.io\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: 'https://ipfs.infura.io/ipfs/' + this.state.added_file_hash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        id: \"captureMedia\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: 'https://ipfs.io/ipfs/' + this.state.added_file_hash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.added_file_hash)));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/eth/ipfs/src/App.js"],"names":["React","require","Web3","ipfsClient","App","loadWeb3","window","ethereum","web3","enable","currentProvider","alert","state","added_file_hash","ipfs","host","port","protocol","captureFile","bind","saveToIpfs","handleSubmit","event","stopPropagation","preventDefault","target","files","ipfsId","add","progress","prog","console","log","then","response","hash","setState","catch","err","error","Component"],"mappings":"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","sourcesContent":["const React = require('react')\nimport Web3 from 'web3';\nconst ipfsClient = require('ipfs-http-client');\n\nclass App extends React.Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n  //  await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n\n  constructor () {\n    super()\n    this.state = {\n      added_file_hash: null\n    }\n    this.ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n    this.captureFile = this.captureFile.bind(this)\n    this.saveToIpfs = this.saveToIpfs.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  captureFile (event) {\n    event.stopPropagation()\n    event.preventDefault()\n      this.saveToIpfs(event.target.files)\n  }\n\n  saveToIpfs (files) {\n    let ipfsId\n    this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n      .then((response) => {\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({ added_file_hash: ipfsId })\n        \n      }).catch((err) => {\n        console.error(err)\n      })\n  }\n\n  handleSubmit (event) {\n    event.preventDefault()\n  }\n\n  render () {\n    return (\n      <div>\n        <a\n          href=\"creablock.io\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <img alt='' src={'https://ipfs.infura.io/ipfs/'+ this.state.added_file_hash } />\n        </a>\n        <form id='captureMedia' onSubmit={this.handleSubmit}>\n          <input type='file' onChange={this.captureFile} /><br/>\n        </form>\n        <div>\n          <a target='_blank'\n            rel=\"noopener noreferrer\"\n            href={'https://ipfs.io/ipfs/' + this.state.added_file_hash}>\n            {this.state.added_file_hash}\n          </a>\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}