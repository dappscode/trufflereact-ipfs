{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar CID = require('cids');\n\nvar configure = require('../lib/configure');\n\nvar toIterable = require('../lib/stream-to-iterable');\n\nmodule.exports = configure(function (_ref) {\n  var ky = _ref.ky;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _data = _wrapAsyncGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(cid, options) {\n        var searchParams, res, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = options || {};\n                searchParams = new URLSearchParams(options.searchParams);\n                searchParams.set('arg', \"\".concat(Buffer.isBuffer(cid) ? new CID(cid) : cid));\n                _context.next = 5;\n                return _awaitAsyncGenerator(ky.post('object/data', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers,\n                  searchParams: searchParams\n                }));\n\n              case 5:\n                res = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 8;\n                _iterator = _asyncIterator(toIterable(res.body));\n\n              case 10:\n                _context.next = 12;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 12:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 16;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 16:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 24;\n                  break;\n                }\n\n                chunk = _value;\n                _context.next = 21;\n                return Buffer.from(chunk);\n\n              case 21:\n                _iteratorNormalCompletion = true;\n                _context.next = 10;\n                break;\n\n              case 24:\n                _context.next = 30;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t0 = _context[\"catch\"](8);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 30:\n                _context.prev = 30;\n                _context.prev = 31;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 35;\n                  break;\n                }\n\n                _context.next = 35;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 35:\n                _context.prev = 35;\n\n                if (!_didIteratorError) {\n                  _context.next = 38;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 38:\n                return _context.finish(35);\n\n              case 39:\n                return _context.finish(30);\n\n              case 40:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[8, 26, 30, 40], [31,, 35, 39]]);\n      }));\n\n      function data(_x, _x2) {\n        return _data.apply(this, arguments);\n      }\n\n      return data;\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}