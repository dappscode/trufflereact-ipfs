{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/eth/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar configure = require('../lib/configure');\n\nmodule.exports = configure(function (_ref) {\n  var ky = _ref.ky;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(path, options) {\n        var searchParams, _ref3, Keys;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (path && path.type) {\n                  options = path;\n                  path = null;\n                }\n\n                path = path || [];\n                path = Array.isArray(path) ? path : [path];\n                options = options || {};\n                searchParams = new URLSearchParams(options.searchParams);\n                path.forEach(function (p) {\n                  return searchParams.append('arg', \"\".concat(p));\n                });\n                if (options.type) searchParams.set('type', options.type);\n                _context.next = 9;\n                return ky.post('pin/ls', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers,\n                  searchParams: searchParams\n                }).json();\n\n              case 9:\n                _ref3 = _context.sent;\n                Keys = _ref3.Keys;\n                return _context.abrupt(\"return\", Object.keys(Keys).map(function (hash) {\n                  return {\n                    hash: hash,\n                    type: Keys[hash].Type\n                  };\n                }));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}